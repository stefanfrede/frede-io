---
permalink: service-worker.js
---
const {
  excludedUrls: EXCLUDED_URLS,
  ignoredHosts: IGNORED_HOSTS,
  preCacheUrls: PRE_CACHE_URLS,
  nanoid: VERSION,
} = {{ sw }}

const CACHE_KEYS = {
  PRE_CACHE: `precache-${VERSION}`,
  RUNTIME: `runtime-${VERSION}`,
};

// On installâ€”as a dependency
// https://web.dev/offline-cookbook/#on-install-as-dependency
self.addEventListener('install', function (event) {
  event.waitUntil(
    caches.open(CACHE_KEYS.PRE_CACHE).then(function (cache) {
      return cache.addAll(PRE_CACHE_URLS);
    }),
  );
});

// On activate
// https://web.dev/offline-cookbook/#on-activate
self.addEventListener('activate', function (event) {
  event.waitUntil(
    caches
      .keys()
      .then(function (cacheNames) {
        return cacheNames.filter(function (item) {
          return !Object.values(CACHE_KEYS).includes(item);
        });
      })
      .then(function (itemsToDelete) {
        return Promise.all(
          itemsToDelete.map(function (item) {
            return caches.delete(item);
          }),
        );
      })
      .then(function () {
        return self.clients.claim();
      }),
  );
});

// A combination of `Cache, falling back to network` and `Cache then network`
// https://web.dev/offline-cookbook/#cache-falling-back-to-network
// https://web.dev/offline-cookbook/#cache-then-network
self.addEventListener('fetch', function (event) {
  const { hostname } = new URL(event.request.url);

  if (IGNORED_HOSTS.indexOf(hostname) >= 0) {
    return;
  }

  const getPageUrl = function (url) {
    return event.request.url.indexOf(url) > -1;
  };

  if (EXCLUDED_URLS.some(getPageUrl)) {
    return;
  }

  event.respondWith(
    caches.match(event.request).then(function (response) {
      if (response) {
        return response;
      }

      return caches.open(CACHE_KEYS.RUNTIME).then(function (cache) {
        return fetch(event.request).then(function (response) {
          cache.put(event.request, response.clone());
          return response;
        });
      });
    }),
  );
});
